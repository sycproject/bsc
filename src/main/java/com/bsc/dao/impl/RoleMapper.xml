<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bsc.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.bsc.entity.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="roleKey" property="rolekey" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    id, name, roleKey, description, status
  </sql>
 
  
  <!-- 排序 -->
  <sql id="orderBySql">
    order by ${orderCol} ${orderReg}
  </sql>
  
  <!-- 分页 -->
  <sql id="limitBySql">
  	LIMIT #{startIndex},#{pageSize}
  </sql>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="hashmap">
  	select * from tb_role where 1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="name != null">
			and name = #{name}
		</if>
		<if test="roleKey != null">
			and roleKey = #{roleKey}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
	<include refid="orderBySql" />
  </select>
  
  <select id="getListByPage" resultMap="BaseResultMap" parameterType="hashmap">
  	select * from tb_role where 1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="name != null">
			and name = #{name}
		</if>
		<if test="roleKey != null">
			and roleKey = #{roleKey}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
	<include refid="orderBySql" />
	<include refid="limitBySql" />
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bsc.entity.Role" >
    insert into tb_role (id, name, roleKey, 
      description, status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{rolekey,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bsc.entity.Role" >
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="rolekey != null" >
        roleKey,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rolekey != null" >
        #{rolekey,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bsc.entity.Role" >
    update tb_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rolekey != null" >
        roleKey = #{rolekey,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bsc.entity.Role" >
    update tb_role
    set name = #{name,jdbcType=VARCHAR},
      roleKey = #{rolekey,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>